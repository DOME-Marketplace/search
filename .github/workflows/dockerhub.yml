
name: Release in Docker Hub

on:
  push:
    branches: ["dockerhub"]
  # pull_request:
  #  branches: ["main"]

env:
  #IMAGE_NAME: ${{ github.repository }} # github.repository => <user>/<repo>
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/search
  #IMAGE_VERSION: 0.0.${{ github.run_number }}

jobs:
build:
  name: Build
  runs-on: ubuntu-latest

  steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: "17"
        distribution: "temurin"
        cache: maven
    
    - name: Set up Maven settings
      run: |
        cat > ~/.m2/settings.xml <<EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <settings xmlns="http://maven.apache.org/SETTINGS/1.1.0"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd">
            <!--This sends everything else to /public -->
            <mirrors>
                <mirror>
                    <id>nexus</id>
                    <mirrorOf>external:*</mirrorOf>
                    <url>${{ vars.NEXUS_URL }}/content/groups/alm-eng-esl-mirror/
                    </url>
                </mirror>
            </mirrors>
            <servers>
                <server>
                    <id>almesl-snapshots</id>
                    <username>${{ vars.LDAP_USERNAME }}</username>
                    <password>${{ secrets.LDAP_PASSWORD }}</password>
                </server>
                <server>
                    <id>almesl-releases</id>
                    <username>${{ vars.LDAP_USERNAME }}</username>
                    <password>${{ secrets.LDAP_PASSWORD }}</password>
                </server>
                <server>
                    <id>nexus</id>
                    <username>${{ vars.LDAP_USERNAME }}</username>
                    <password>${{ secrets.LDAP_PASSWORD }}</password>
                </server>
            </servers>
            <profiles>
                <profile>
                    <id>nexus</id>
                    <repositories>
                        <repository>
                            <id>almesl-snapshots</id>
                            <url>${{ vars.NEXUS_URL }}/content/repositories/snapshots/
                            </url>
                            <releases>
                                <enabled>false</enabled>
                            </releases>
                            <snapshots>
                                <enabled>true</enabled>
                            </snapshots>
                        </repository>
                        <repository>
                            <id>almesl-releases</id>
                            <url>${{ vars.NEXUS_URL }}/content/repositories/releases/
                            </url>
                            <releases>
                                <enabled>true</enabled>
                            </releases>
                            <snapshots>
                                <enabled>false</enabled>
                            </snapshots>
                        </repository>
                    </repositories>
                    <pluginRepositories>
                        <pluginRepository>
                            <id>nexus</id>
                            <url>${{ vars.NEXUS_URL }}/content/groups/alm-eng-esl-mirror/</url>
                            <releases>
                                <enabled>true</enabled>
                            </releases>
                            <snapshots>
                                <enabled>true</enabled>
                            </snapshots>
                        </pluginRepository>
                    </pluginRepositories>
                </profile>
            </profiles>
            <activeProfiles>
                <!--make the profile active all the time -->
                <activeProfile>nexus</activeProfile>
            </activeProfiles>
        </settings>
        EOF

    - name: Build with Maven
      run: mvn -B install --file pom.xml