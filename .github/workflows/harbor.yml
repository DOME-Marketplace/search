
name: Release Harbor

on:
  push:
    branches: ["harbor"]

env:
  REPOSITORY: production.eng.it:8433 # URL Harbor
  IMAGE_NAME: search

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

  pmd_job:
    name: Static Code Analyzer
    runs-on: ubuntu-latest  
    needs: [build]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
     
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Generate PMD report
        id: generate-pmd-report
        uses: pmd/pmd-github-action@v2
        with:
          rulesets: 'src/main/resources/rulesets/java/pmd-dome.xml'
          sourcePath: 'src/main/java'
          analyzeModifiedFilesOnly: false
      
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: pmd-report.sarif

      - name: Fail build if there are violations
        if: steps.generate-pmd-report.outputs.violations > 0
        run: exit 1

  publish:
    name: Publish in Harbor repository
    runs-on: ubuntu-latest
    needs: [pmd_job]

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
      - run: mvn -B package --file pom.xml -DskipTests

      - name: Get Image Version
        run: |
          mvn versions:set -DremoveSnapshot -DgenerateBackupPoms=false -DinteractiveMode=false
          echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> "$GITHUB_OUTPUT"
        id: getVersion

      - name: Print Image Version
        run: |
          echo "The image version is ${{ steps.getVersion.outputs.version }}"

      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REPOSITORY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build and Tag Image
        run: docker build -t ${{ env.REPOSITORY }}/dome/${{ env.IMAGE_NAME }}:${{ steps.getVersion.outputs.version }} .    
      
      - name: Push Image to Harbor
        run: docker push ${{ env.REPOSITORY }}/dome/${{ env.IMAGE_NAME }}:${{ steps.getVersion.outputs.version }}
      
      - name: Remove Image
        run: docker rmi ${{ env.REPOSITORY }}/dome/${{ env.IMAGE_NAME }}:${{ steps.getVersion.outputs.version }}

